{{- if .Values.zookeeper.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "zookeeper.labels" . | nindent 4 }}
spec:
  ports:
    - port: {{ .Values.zookeeper.service.port }}
      name: client
      targetPort: {{ .Values.zookeeper.service.port }}
  clusterIP: None
  selector:
    app: zookeeper

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "zookeeper.labels" . | nindent 4 }}
spec:
  serviceName: zookeeper
  replicas: {{ .Values.zookeeper.replicaCount }}
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
        component: coordination
    spec:
      tolerations: []
      nodeSelector:
        node-role.kubernetes.io/worker: "worker"
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
        - name: fix-permissions
          image: busybox
          securityContext:
            runAsUser: 0
          command: ["sh", "-c", "chown -R 1000:1000 /var/lib/zookeeper/data"]
          volumeMounts:
            - name: zookeeper-data
              mountPath: /var/lib/zookeeper/data
      containers:
        - name: zookeeper
          image: "{{ .Values.zookeeper.image.repository }}:{{ .Values.zookeeper.image.tag }}"
          imagePullPolicy: {{ .Values.zookeeper.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.zookeeper.service.port }}
              name: client
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: {{ .Values.zookeeper.env.clientPort | quote }}
            - name: ZOOKEEPER_TICK_TIME
              value: {{ .Values.zookeeper.env.tickTime | quote }}
            - name: ZOOKEEPER_SYNC_LIMIT
              value: "5"
            - name: ZOOKEEPER_INIT_LIMIT
              value: "10"
          volumeMounts:
            - name: zookeeper-data
              mountPath: /var/lib/zookeeper/data
            - name: zookeeper-log
              mountPath: /var/lib/zookeeper/log
          livenessProbe:
            tcpSocket:
              port: {{ .Values.zookeeper.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: {{ .Values.zookeeper.service.port }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            {{- toYaml .Values.zookeeper.resources | nindent 12 }}
      volumes:
        {{- if not .Values.zookeeper.persistence.enabled }}
        - name: zookeeper-data
          emptyDir: {}
        {{- end }}
        - name: zookeeper-log
          emptyDir: {}
  {{- if .Values.zookeeper.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: zookeeper-data
        labels:
          {{- include "zookeeper.labels" . | nindent 10 }}
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.global.storageClass }}
        resources:
          requests:
            storage: {{ .Values.zookeeper.persistence.size }}
  {{- end }}
{{- end }}
