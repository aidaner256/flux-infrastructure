{{- if .Values.redis.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
spec:
  ports:
    - port: {{ .Values.redis.service.port }}
      name: redis
      targetPort: {{ .Values.redis.service.port }}
  clusterIP: None
  selector:
    app: redis

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
spec:
  serviceName: redis
  replicas: {{ .Values.redis.replicaCount }}
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        component: cache
    spec:
      tolerations: []
      nodeSelector:
        node-role.kubernetes.io/worker: "worker"
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      initContainers:
        - name: fix-permissions
          image: busybox
          securityContext:
            runAsUser: 0
          command: ["sh", "-c", "chown -R 999:999 /var/lib/redis"]
          volumeMounts:
            - name: redis-data
              mountPath: /var/lib/redis
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.redis.service.port }}
              name: redis
          command:
            - redis-server
            - --appendonly
            - "yes"
            - --save
            - "60 1"
          volumeMounts:
            - name: redis-data
              mountPath: /data
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
      {{- if not .Values.redis.persistence.enabled }}
      volumes:
        - name: redis-data
          emptyDir: {}
      {{- end }}
  {{- if .Values.redis.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          {{- include "redis.labels" . | nindent 10 }}
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.global.storageClass }}
        resources:
          requests:
            storage: {{ .Values.redis.persistence.size }}
  {{- end }}
{{- end }}
